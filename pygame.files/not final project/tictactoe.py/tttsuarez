#MAria   
# TICTACTOE  
# zero_Array() 
# draw_grid() 
# draw_markers() 
# checkWinner() 
# Game_end()

import os, random, time, pygame, math, datetime,sys
os.system('cls')

pygame.init()

TITLE_FONT = pygame.font.SysFont('comicsans', 40)
MENU_FONT = pygame.font.SysFont('comicsans', 20)

WIDTH=700 #like constant
HEIGHT=700
colors={"white":(255,255,255),"pink":(255,0,255),"blue":(0,0,255),"limeGreen":(153,255,51),
"RED" : (255, 0, 0),
"GREEN" : (0, 255, 0),
"BLUE" : (0, 0,255),}

clr=colors.get("limeGreen")
messageMenu=['Instructions', 'Settings', 'Game 1', 'Game 2', 'Scoreboard', 'Exit']
messageSettings=["Background Colors", "Screen Size", "Sound On/Off"]
mainTitle="Circle eats Square Menu"
#create dispay wind with any name y like
screen=pygame.display.set_mode((WIDTH,HEIGHT)) 
pygame.display.set_caption("Tic Tac Te")  #change the title of my window
backgrnd=colors.get("pink")

#game Variable
player=1        #Change players 1 and -1
gameOver=False  #check is game is Over
winner=0        #save winner either 1 OR -1 ZERO means tie
markers=[]      #CONTROL cells
lineWidth=10    #thickness  drawing
Game=True       #CONTROL game
MxMy=(0,0)      #Clicks
print(markers)  
cirClr=colors.get("blue")     #circle COLOR
xClr=colors.get("BLACK")      #X COLOR

#FunctiOn TO ZERO OUR ARRAY
def zero_Array(): 
    for x in range(3):
        row= [0] *3
        markers.append(row)


def draw_grid():
    lineClr=colors.get("white")
    for x in range(1,3):
        pygame.draw.line(screen,lineClr,(0,HEIGHT//3*x),(WIDTH,HEIGHT//3*x),lineWidth)  #Hztal line
        pygame.draw.line(screen,lineClr,(WIDTH//3*x, 0),(WIDTH//3*x,HEIGHT),lineWidth)  #Vert line
    pygame.time.delay(100)

def draw_Markers():
    xValue=0
    for x in markers:   # getting a rw
        yValue=0
        for y in x:  #each elem fthe rw
            if y ==1:
                
                pygame.draw.line(screen,xClr,(xValue * WIDTH//3 + 15, yValue * HEIGHT//3 + 15), (xValue * WIDTH//3 + WIDTH//3-15, yValue * WIDTH//3 + WIDTH//3-15),lineWidth)
                pygame.draw.line(screen, xClr,(xValue*WIDTH//3 +WIDTH//3-15, yValue*HEIGHT//3+15),(xValue *WIDTH//3+15,yValue*HEIGHT//3+HEIGHT//3-15),lineWidth)
            if y==-1:
                
                pygame.draw.circle(screen,cirClr,(xValue*WIDTH//3+WIDTH//6,yValue*HEIGHT//3 +HEIGHT//6),WIDTH//6-15, lineWidth)
            yValue +=1
        xValue +=1
    pygame.display.update() 
def checkWinner():
    global gameOver,winner
    x_pOs=0
    for x in markers:
        #check COL
        if sum(x) ==3:
            print("sum")
            winner = 1
            gameOver=True
            xwinner()
        if sum(x) ==-3:
            winner = -1
            gameOver=True
            owinner()
        #Check ROWS
        if markers[0][x_pOs] +markers[1][x_pOs]+markers[2][x_pOs] == 3:
            winner = 1
            gameOver=True
            xwinner()

        if markers[0][x_pOs] +markers[1][x_pOs]+markers[2][x_pOs] == -3:
            winner = -1
            gameOver=True
            owinner()
        x_pOs +=1
    # #Check DiagOnals 
    if markers[0][0]+markers[1][1]+markers[2][2] == 3 or markers[2][0]+markers[1][1]+markers[0][2] == 3:
        winner = 1
        gameOver=True
        xwinner()
    if markers[0][0]+markers[1][1]+markers[2][2] == -3 or markers[2][0]+markers[1][1]+markers[0][2] == -3:
        winner = -1
        gameOver=True
        owinner()
    #Check FOR a tie
    if gameOver ==False:
        tie=True
        for ROW in markers:
            for COL in ROW:
                if COL ==0:
                    tie=False
        #LEts make winner =0 if it is tie
        if tie:   #in a bOOlean variable dOnt need ==  if tie == True
            gameOver=True
            winner=0


    
def gameEnd():
    global Game
    Game = False
    screen.fill(backgrnd)
    text = TITLE_FONT.render("The game is over. Do you want to play again?", 1, colors.get("blue") )
    screen.blit(text,(350,50))
    Button_Yes = pygame.Rect((WIDTH//2, 150), (WIDTH//4, 40))
    Button_No = pygame.Rect((WIDTH//2, 150), (WIDTH//4, 40))
    pygame.draw.rect(screen, colors.get("pink"), Button_Yes)
    pygame.draw.rect(screen, colors.get("pink"), Button_No)
    textYes= MENU_F


def xwinner():
    screen.fill(backgrnd)
    text = MENU_FONT.render("Player X is the winner!", 1, (cirClr))
    screen.blit(text, (WIDTH/2.5, HEIGHT/2.5))
    pygame.display.update()
    pygame.time.delay(2000)
    gameEnd()
def owinner():
    screen.fill(backgrnd)
    text = MENU_FONT.render("Player O is the winner!", 1, (cirClr))
    screen.blit(text, (WIDTH/2.5, HEIGHT/2.5))
    pygame.display.update()
    pygame.time.delay(2000)
    gameEnd()
def tie():
    screen.fill(backgrnd)
    text = MENU_FONT.render("Tie!", 1, (cirClr))
    screen.blit(text, (WIDTH/2.5, HEIGHT/2.5))
    pygame.display.update()
    pygame.time.delay(2000)
    gameEnd()

zero_Array()
while Game:
    screen.fill(backgrnd)
    draw_grid()
    draw_Markers()
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            #Menu(mainTitle,messageMenu)
            pygame.quit()
            sys.exit()
            
        if event.type == pygame.MOUSEBUTTONDOWN:
            MxMy = pygame.mouse.get_pos()
            cellx=MxMy[0]//(WIDTH//3)
            celly=MxMy[1]//(HEIGHT//3)
            # print(cellx, celly)
            if markers[cellx][celly]==0:
                markers[cellx][celly]=player
                player *=-1
                checkWinner()
                print(winner)
                if gameOver:
                    gameEnd()
            
            
            
    pygame.display.update() 
    pygame.time.delay(100)
